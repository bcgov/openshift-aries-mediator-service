kind: Template
apiVersion: v1
metadata:
  name: ${NAME}${SUFFIX}-deployment-template
  annotations:
    description: Deployment template for a Node server connected to Aries agent.
    tags: node
    iconClass: icon-node
objects:
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}-allow-ingress
      labels:
        name: ${NAME}${SUFFIX}-allow-ingress
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the ${ROLE} container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the agent to access the controller.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${AGENT_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: ${{API_PORT}}
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}
          
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}-admin
      labels:
        name: ${NAME}${SUFFIX}-admin
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_ADMIN_DOMAIN}
      port:
        targetPort: ${NAME}${SUFFIX}-admin
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}${SUFFIX}-admin
          port: ${{API_PORT}}
          protocol: TCP
          targetPort: ${{API_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      admin-api-key: ${API_KEY}
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the application server
        app.openshift.io/connects-to: >-
          [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${AGENT_HOST}${SUFFIX}"}]
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              command:
                - bash
                - -c
                - npm install; npm run dev
              image: " "
              ports:
                - containerPort: ${{API_PORT}}
                  protocol: TCP
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 30
                initialDelaySeconds: 3
                timeoutSeconds: 40
                httpGet:
                  path: "/"
                  port: ${{API_PORT}}
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 60
                initialDelaySeconds: 30
                timeoutSeconds: 40
                httpGet:
                  path: "/"
                  port: ${{API_PORT}}
              env:
                - name: PORT
                  value: ${API_PORT}
                - name: CONTROLLER_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: admin-api-key
                - name: MEDIATOR_ADMIN_URL
                  value: http://${AGENT_HOST}${SUFFIX}:${AGENT_ADMIN_PORT}
                - name: MEDIATOR_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${AGENT_HOST}${SUFFIX}-api
                      key: admin-api-key
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: aries-mediator-controller
  - name: ROLE
    displayName: Role
    description: Service Role
    required: true
    value: controller
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod.
    required: true
    value: dev
  - name: API_PORT
    displayName: Role
    description: Service Role
    required: true
    value: "3010"
  - name: API_KEY
    displayName: Admin API Key
    description: The key used to authenticate client requests to the admin api.
    required: false
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: AGENT_ROLE
    displayName: Agent Role
    description: Agent Role
    required: true
    value: agent
  - name: AGENT_HOST
    displayName: Agent Host
    description: Agent Host
    required: true
    value: aries-mediator-agent
  - name: APPLICATION_ADMIN_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: aries-mediator-controller-admin-dev.apps.silver.devops.gov.bc.ca
  - name: AGENT_ADMIN_PORT
    displayName: Agent Port
    description: Agent Port
    required: true
    value: "3002"
  - name: NAMESPACE
    displayName: The target namespace for the resources.
    required: true
    value: 4a9599
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: 
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: aries-mediator-service
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: aries-mediator-service
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: 4a9599-tools

  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "2"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "16"

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 300m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
